[gd_resource type="Shader" load_steps=0 format=3 uid="uid://1sy5e7o3ctc1"]

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;




void fragment() {
// ColorConstant:3
	vec4 n_out3p0 = vec4(0.000000, 0.640000, 0.181333, 1.000000);


// Fresnel:4
	float n_in4p3 = 1.00000;
	float n_out4p0 = pow(1.0 - clamp(dot(NORMAL, VIEW), 0.0, 1.0), n_in4p3);


	vec3 n_out7p0;
// If:7
	float n_in7p1 = 0.50000;
	float n_in7p2 = 0.00001;
	vec3 n_in7p3 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_in7p4 = vec3(0.50000, 0.00000, 0.00000);
	vec3 n_in7p5 = vec3(0.60000, 0.00000, 0.00000);
	if(abs(n_out4p0 - n_in7p1) < n_in7p2)
	{
		n_out7p0 = n_in7p3;
	}
	else if(n_out4p0 < n_in7p1)
	{
		n_out7p0 = n_in7p5;
	}
	else
	{
		n_out7p0 = n_in7p4;
	}


// Output:0
	ALBEDO = vec3(n_out3p0.xyz);
	ALPHA = n_out7p0.x;


}
"
